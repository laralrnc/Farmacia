package com.generation.farmacia.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.generation.farmacia.model.Produto;
import com.generation.farmacia.repository.CategoriaRepository;
import com.generation.farmacia.repository.ProdutoRepository;

@RestController
@RequestMapping("/produto")
@CrossOrigin(origins = "*", allowedHeaders = "*")
public class ProdutoController {
	
	@Autowired
	private ProdutoRepository produtorepository;
	
	@Autowired
	private CategoriaRepository categoriarepository;
	
	//listar todos
	@GetMapping 
	public ResponseEntity <List <Produto>> getAll()
	{
		return ResponseEntity.ok(produtorepository.findAll());
	}
	
	//buscar por nome
	@GetMapping("/nome/{nome}")
	public ResponseEntity <List <Produto>> getByNome(@PathVariable String nome)
	{
		return ResponseEntity.ok(produtorepository.findAllByNomeContainingIgnoreCase(nome));
	}
	
	//cadastrar novo
	@PostMapping
	public ResponseEntity<Produto> postProduto(@Valid @RequestBody Produto produto)
	{

		if (categoriarepository.existsById(produto.getCategoria().getId()))
		{
		return ResponseEntity.status(HttpStatus.CREATED).
				body(produtorepository.save(produto));
		}
		else
		{
			return ResponseEntity.notFound().build();
		}
	}

}
